{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Owner\\\\Documents\\\\React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\React\\\\my-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Table from './component/table';\nimport initializeDeck from './component/deck';\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        flipped = _useState2[0],\n        setFlipped = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cards = _useState4[0],\n        setCards = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        solved = _useState6[0],\n        setSolved = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        disabled = _useState8[0],\n        setDisabled = _useState8[1]; //const [player1,player2] = useState()\n\n\n  useEffect(() => {\n    setCards(initializeDeck());\n  }, []);\n\n  const handleClick = (id, type) => {\n    if (flipped.length < 1) {\n      setFlipped([...flipped, id]);\n    } else {\n      //setDisabled(true)\n      setFlipped([...flipped, id]);\n    }\n\n    compareCards(id);\n  };\n\n  const compareCards = type => {\n    console.log(type);\n  };\n\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    class: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Card Matching Game\"), React.createElement(Table, {\n    cards: cards,\n    flipped: flipped,\n    handleClick: handleClick,\n    disabled: disabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Owner/Documents/React/my-app/src/App.js"],"names":["React","useState","useEffect","Table","initializeDeck","App","flipped","setFlipped","cards","setCards","solved","setSolved","disabled","setDisabled","handleClick","id","type","length","compareCards","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACgBJ,QAAQ,CAAC,EAAD,CADxB;AAAA;AAAA,QACNK,OADM;AAAA,QACEC,UADF;;AAAA,qBAEaN,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,QAENO,KAFM;AAAA,QAECC,QAFD;;AAAA,qBAIeR,QAAQ,CAAC,EAAD,CAJvB;AAAA;AAAA,QAINS,MAJM;AAAA,QAIEC,SAJF;;AAAA,qBAKmBV,QAAQ,CAAC,KAAD,CAL3B;AAAA;AAAA,QAKNW,QALM;AAAA,QAKIC,WALJ,kBAMb;;;AAEAX,EAAAA,SAAS,CAAC,MAAK;AACbO,IAAAA,QAAQ,CAACL,cAAc,EAAf,CAAR;AACD,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMU,WAAW,GAAG,CAACC,EAAD,EAAIC,IAAJ,KAAY;AAC5B,QAAIV,OAAO,CAACW,MAAR,GAAiB,CAArB,EAAyB;AACzBV,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAYS,EAAZ,CAAD,CAAV;AACD,KAFC,MAEM;AACN;AACAR,MAAAA,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAYS,EAAZ,CAAD,CAAV;AACD;;AACDG,IAAAA,YAAY,CAACH,EAAD,CAAZ;AACD,GARD;;AAUA,QAAMG,YAAY,GAAIF,IAAD,IAAU;AAC9BG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,GAFD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAER,KADT;AAEE,IAAA,OAAO,EAAEF,OAFX;AAGE,IAAA,WAAW,EAAEQ,WAHf;AAIE,IAAA,QAAQ,EAAIF,QAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAWD;;AAED,eAAeP,GAAf","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Table from './component/table'; \n\nimport initializeDeck from './component/deck';\n\nfunction App() {\n  const [flipped,setFlipped] = useState([])\n  const [cards, setCards] = useState([])\n\n  const [solved, setSolved] = useState([])\n  const [disabled, setDisabled] = useState(false)\n  //const [player1,player2] = useState()\n\n  useEffect(()=> {\n    setCards(initializeDeck())\n  },[])\n\n  const handleClick = (id,type)=> {\n      if (flipped.length < 1 ) {\n      setFlipped([...flipped,id])\n    } else  {      \n      //setDisabled(true)\n      setFlipped([...flipped,id])\n    } \n    compareCards(id)\n  }\n\n  const compareCards = (type) => {\n   console.log(type)\n  }\n\n\n  return (\n    <main>\n      <h1 class=\"title\"> Card Matching Game</h1>\n      <Table \n        cards={cards}\n        flipped={flipped}\n        handleClick={handleClick}\n        disabled = {disabled}\n      /> \n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}