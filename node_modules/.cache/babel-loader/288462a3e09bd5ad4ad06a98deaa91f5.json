{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Owner\\\\Documents\\\\React\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\React\\\\my-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Table from './component/table';\nimport ScoreCard from './component/scorecard';\nimport initializeDeck from './component/deck';\n\nfunction App() {\n  let player1 = 0;\n  let player2 = 0;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        flipped = _useState2[0],\n        setFlipped = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cards = _useState4[0],\n        setCards = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        turn = _useState6[0],\n        setTurn = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        solved = _useState8[0],\n        setSolved = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        disabled = _useState10[0],\n        setDisabled = _useState10[1];\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        score = _useState12[0],\n        setScore = _useState12[1];\n\n  useEffect(() => {\n    setCards(initializeDeck());\n  }, []);\n\n  const handleClick = id => {\n    if (flipped.length == 0) {\n      setFlipped([id]);\n      setDisabled(false);\n    } else {\n      if (sameCardClicked(id)) return;\n      setDisabled(true);\n      setFlipped([flipped[0], id]);\n\n      if (cardsMatch(id)) {\n        addPoint(playerTurn);\n        setTimeout(resetCards, 1000);\n      } else {\n        setTurn(!turn);\n        setTimeout(resetCards, 1000);\n      }\n    }\n  };\n\n  const resetCards = () => {\n    setFlipped([]);\n    setDisabled(false);\n  };\n\n  const cardsMatch = id => {\n    const firstCard = cards.find(card => card.id === flipped[0]);\n    const secondCard = cards.find(card => card.id === id);\n\n    if (firstCard.type === secondCard.type) {\n      setSolved([...solved, secondCard.id, firstCard.id]);\n      return true;\n    }\n  };\n\n  const sameCardClicked = id => flipped.includes(id);\n\n  const addPoint = player => {\n    player.setScore(score + 1);\n  };\n\n  const playerTurn = () => {\n    if (turn) {\n      return player1;\n    } else {\n      return player2;\n    }\n  };\n\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(ScoreCard, {\n    player1: player1,\n    player2: player2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \" Card Matching Game\"), React.createElement(Table, {\n    cards: cards,\n    flipped: flipped,\n    handleClick: handleClick,\n    disabled: disabled,\n    solved: solved,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Owner/Documents/React/my-app/src/App.js"],"names":["React","useState","useEffect","Table","ScoreCard","initializeDeck","App","player1","player2","flipped","setFlipped","cards","setCards","turn","setTurn","solved","setSolved","disabled","setDisabled","score","setScore","handleClick","id","length","sameCardClicked","cardsMatch","addPoint","playerTurn","setTimeout","resetCards","firstCard","find","card","secondCard","type","includes","player"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport './App.css';\nimport Table from './component/table'; \nimport ScoreCard from './component/scorecard';\n\nimport initializeDeck from './component/deck';\n\nfunction App() {\n  let player1 = 0\n  let player2 = 0\n\n  const [flipped,setFlipped] = useState([])\n  const [cards, setCards] = useState([])\n  const [turn,setTurn] = useState(true)\n\n  const [solved, setSolved] = useState([])\n  const [disabled, setDisabled] = useState(false)\n\n  const [score,setScore] = useState(0) \n\n  useEffect(()=> {\n    setCards(initializeDeck())\n  },[])\n\n  const handleClick = (id)=> {\n      if (flipped.length == 0 ) {\n      setFlipped([id])\n      setDisabled(false)\n    } else  {\n\n      if(sameCardClicked(id)) return\n      setDisabled(true)\n      setFlipped([flipped[0],id])\n\n      if (cardsMatch(id)) {\n        addPoint(playerTurn)\n        setTimeout(resetCards,1000)\n      } else {\n        setTurn(!turn)\n        setTimeout(resetCards,1000)\n      }\n\n    }\n  }\n\n  const resetCards =() => {      \n        setFlipped([])\n        setDisabled(false)\n    }\n\n  const cardsMatch = (id) => {\n   const firstCard = cards.find((card) => card.id === flipped[0])\n   const secondCard = cards.find((card) => card.id === id )\n   if (firstCard.type === secondCard.type) {\n    setSolved([...solved,secondCard.id,firstCard.id])\n    return true \n   } \n  }\n\n  const sameCardClicked = (id) => flipped.includes(id)\n\n  \n\n  const addPoint = (player) => {\n    player.setScore(score+1)\n  }\n\n  const playerTurn = () => { \n    if (turn) {\n        return player1\n      } else {\n        return player2 \n      }\n  } \n\n  return (\n    <main>\n      <header>\n        <ScoreCard \n          player1={player1}\n          player2={player2}\n        />\n      </header>\n      <h1 className=\"title\"> Card Matching Game</h1>\n      <Table \n        cards={cards}\n        flipped={flipped}\n        handleClick={handleClick}\n        disabled = {disabled}\n        solved ={solved}\n      /> \n    </main>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}