{"version":3,"sources":["component/card/index.jsx","component/table/index.jsx","component/deck.js","component/scoresboard/index.jsx","App.js","index.js"],"names":["Card","disabled","handleClick","id","flipped","back","front","solved","player","type","className","onClick","Table","cards","map","card","key","includes","initializeDeck","array","arrayClone","slice","i","length","randomIndex","Math","floor","random","temp","shuffle","reduce","acc","push","Scoreboard","players","name","score","App","useState","setFlipped","setCards","turn","setTurn","setSolved","setDisabled","active","winner","setPlayers","winMessage","setWinMessage","setActive","useEffect","resetCards","cardsMatch","firstCard","find","secondCard","changeScore","endGame","sameCardClicked","index","newScore","solvedCards","player1","player2","printWinner","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f40bcef.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './style.css'\r\n\r\n\r\nexport default function Card({disabled,handleClick,id,flipped,back,front,player,type,solved}){\r\n\treturn <div\r\n\tclassName = {'c-card__container '+ (flipped ? front : back ) +' '+ (solved ? 'solved' : '')}\r\n\tonClick = {() =>disabled ? null : handleClick(id)}\r\n\t>\r\n\r\n\t\t<div className ='Flipper'>\r\n\t\t\t\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nCard.propTypes = {\r\n\thandleClick: PropTypes.func.isRequired,\r\n\tdisabled:PropTypes.bool.isRequired,\r\n\tid: PropTypes.number.isRequired,\r\n\tflipped: PropTypes.bool.isRequired,\r\n\tback: PropTypes.string.isRequired,\r\n\tfront: PropTypes.string.isRequired,\r\n\ttype: PropTypes.string.isRequired,\r\n\tsolved: PropTypes.bool.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Card from '../card'\r\n\r\nexport default function Table({disabled,cards,flipped,handleClick,solved}) {\r\n\treturn (\r\n\t\t<div className=\"c-game-table\">\r\n\t\t\t{cards.map((card) => (<Card \r\n          id={card.id}\r\n          key = {card.id}\r\n          type={card.type}\r\n          back={'facedown'}\r\n          front={card.type}\r\n          flipped={ flipped.includes(card.id)}\r\n          disabled={disabled || solved.includes(card.id)}\r\n          handleClick={(id) => handleClick(card.id)}\r\n          solved={solved.includes(card.id)}\r\n        />)\r\n\t\t\t)}\r\n\t\t</div>\r\n\t\t)\t\r\n}\r\n\r\nTable.propTypes = {\r\n\tcards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n\tflipped: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n\tsolved: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n\thandleClick: PropTypes.func.isRequired,\r\n\tdisabled: PropTypes.bool.isRequired\r\n}","function shuffle(array) {\r\n\tconst arrayClone = array.slice(0)\r\n\tfor (let i = 0; i< arrayClone.length - 1; i++) {\r\n\t\tlet randomIndex = Math.floor(Math.random() * (i+1))\r\n\t\tlet temp = arrayClone[i]\r\n\t\tarrayClone[i] = arrayClone[randomIndex]\r\n\t\tarrayClone[randomIndex] = temp\r\n\t}\r\n\treturn arrayClone\r\n}\r\n\r\nexport default function initializeDeck(){\r\n\tlet id = 0\r\n\tconst cards = ['blue','red','green','purple','silver','yellow','black','goldenRod','maroon','brown'].reduce((acc,type) =>{\r\n\t\tacc.push({\r\n\t\t\tid:id++,\r\n\t\t\ttype\r\n\t\t})\r\n\t\tacc.push({\r\n\t\t\tid:id++,\r\n\t\t\ttype\r\n\t\t})\r\n\t\treturn acc\r\n\t},[])\r\n\r\n\treturn shuffle(cards)\r\n}","import React from 'react'\r\nimport './style.css'\r\n\r\n\r\nexport default function Scoreboard(players) {\r\n\treturn (\r\n\t\t<section className=\"c-score-table\">\r\n\t\t\t{\t\r\n\t\t\tplayers.players.map((player) => (\r\n\t\t\t\t<div className = 'c-score-table__row '>\r\n\t\t\t\t<div> {player.name} </div>\r\n\t\t\t\t<div> {player.score} </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t</section>\r\n\t\t)\r\n}\r\n\r\n\r\n","import React, {useState,useEffect} from 'react';\nimport './App.css';\nimport Table from './component/table';\n\nimport initializeDeck from './component/deck';\nimport Scoreboard from './component/scoresboard';\n\n\nfunction App() {\n\n  const [flipped,setFlipped] = useState([])\n  const [cards, setCards] = useState([])\n  const [turn,setTurn] = useState(true)\n\n  const [solved, setSolved] = useState([])\n  const [disabled, setDisabled] = useState(false)\n\n  const [players,setPlayers] = useState([{name: 'Player1',score:0,id:0,active:true,winner:false,key:1},{name: 'Player2',score:0,id:1,active:false,winner:false,key:2}])\n\n  const [winMessage,setWinMessage] = useState([])\n  const [active,setActive] = useState(false)\n \n\n  useEffect(()=> {\n    setCards(initializeDeck())\n  },[])\n\n  const handleClick = (id)=> {\n      if (flipped.length === 0 ) {\n      setFlipped([id])\n      setDisabled(false)\n    } else  {\n\n      if(sameCardClicked(id)) return\n      setDisabled(true)\n      setFlipped([flipped[0],id])\n\n      if (cardsMatch(id)) {\n        setTimeout(resetCards,1000)\n      } else {\n        setTurn(!turn)\n        setTimeout(resetCards,1000)\n      }\n\n    }\n  }\n\n  const resetApp = () => {\n    setCards(initializeDeck())\n    setPlayers([{name: 'Player1',score:0,id:0,winner:false,key:1},{name: 'Player2',score:0,id:1,winner:false,key:2}])\n    setFlipped([])\n    setSolved([])\n    setActive(false) \n  }\n\n  const resetCards =() => {      \n        setFlipped([])\n        setDisabled(false)\n    }\n\n  const cardsMatch = (id) => {\n   const firstCard = cards.find((card) => card.id === flipped[0])\n   const secondCard = cards.find((card) => card.id === id )\n   if (firstCard.type === secondCard.type) {\n    setSolved([...solved,secondCard.id,firstCard.id])\n    changeScore(turn)\n    endGame(solved.length)\n    return true \n   } \n  }\n\n  const sameCardClicked = (id) => flipped.includes(id)\n\n\n\n  const changeScore = (turn) => {\n    var index = turn ? 0 : 1\n    const player = players.find((player) => player.id === index)\n    const newScore = (player.score + 1)\n    player.score = newScore\n    players[index] = player\n    setPlayers(players)\n  }\n\n  const printWinner = () => {\n    const player1 = players.find((player) => player.id === 0)\n    const player2 = players.find((player) => player.id === 1)\n    if(player1.score === player2.score) {\n      return ('Its a draw! Play again?')\n    }else if (player1.score > player2.score){\n      return ('Player 1 Wins! Play again?')\n    } else {\n      return ('Player 2 Wins! Play Again?')\n    }\n  }\n\n  const endGame = (solvedCards) => {\n    if (solvedCards === 18) {\n      setWinMessage(printWinner())\n      setActive(true)     \n    }\n  }\n  \n\n  return (\n    <main className='c-main' >\n      <header>\n        <Scoreboard \n          players = {players}\n        />\n      </header>\n      <Table \n        cards={cards}\n        flipped={flipped}\n        handleClick={handleClick}\n        disabled = {disabled}\n        solved ={solved}\n      /> \n      <div className={active ? 'c-modal-active' : 'c-modal'} >\n        <h1>{winMessage}</h1>\n        <a className=\"c-modal__button\" onClick={resetApp} > Yes! </a>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n//import './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}